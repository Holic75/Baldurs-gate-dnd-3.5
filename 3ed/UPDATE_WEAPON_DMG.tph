DEFINE_PATCH_FUNCTION ~UPDATE_WEAPON_DMG~
	INT_VAR
		//original values (if negative will be ignored)
		match_dice_number= 255 
	    match_dice_size= 255
		match_dice_bonus =  255
		match_damage_type = 255
		
		//target values (if negative will stay unchanged)
		target_dice_number = 255
		target_dice_size = 255
		target_dice_bonus = 255
		target_damage_type = 255 
	BEGIN

		READ_LONG 0x64 header_block_offset //beginning of extended_headers table
		READ_SHORT 0x68 n_headers //number of extended_headers

		SET header_size=0x38 //size of header block
		
		SET damage_type_offset=0x001c 
		SET dice_bonus_offset=0x001a 
		SET dice_size_offset=0x0016
		SET dice_number_offset=0x0018
		
		FOR (i=0;i<n_headers;i=i+1) BEGIN
			SET current_header_offset = header_block_offset+i*header_size
			
			READ_BYTE current_header_offset+dice_size_offset   dice_size 
			READ_BYTE current_header_offset+dice_number_offset   dice_number
			
			READ_SHORT current_header_offset+dice_bonus_offset   dice_bonus 
			READ_SHORT current_header_offset+damage_type_offset   damage_type
			

			PATCH_IF (dice_size = match_dice_size OR match_dice_size =255) AND (dice_number = match_dice_number OR match_dice_number =255)
					AND (dice_bonus = match_dice_bonus OR match_dice_bonus  =255) AND (damage_type = match_damage_type OR match_damage_type =255)
				BEGIN
				
					PATCH_IF (target_dice_number!=255) BEGIN
						WRITE_BYTE current_header_offset+dice_number_offset   target_dice_number 
					END
					PATCH_IF (target_dice_size!=255) BEGIN
						WRITE_BYTE current_header_offset+dice_size_offset   target_dice_size 
					END					
					PATCH_IF (target_dice_bonus!=255) BEGIN
						WRITE_SHORT current_header_offset+dice_bonus_offset   target_dice_bonus 
					END
					PATCH_IF (target_damage_type!=255) BEGIN
						WRITE_SHORT current_header_offset+damage_type_offset   target_damage_type 
					END
						
				END


			
		END
		
    END		
	

