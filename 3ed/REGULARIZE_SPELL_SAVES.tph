DEFINE_PATCH_FUNCTION ~REGULARIZE_SPELL_SAVES~
	INT_VAR
        ignore_pwr = 0
        increment_save = 0 
    RET
       updated
       
	BEGIN
        SET updated = 0
		READ_LONG 0x64 header_block_offset //beginning of extended_headers table
		READ_LONG 0x6a effects_block_offset //beginning of effects table
		READ_SHORT 0x68 n_headers //number of extended_headers

		
		SET effect_size=0x30 //size of effect block
		
		PATCH_IF (~%SOURCE_EXT%~ STRING_EQUAL ~SPL~) BEGIN
			SET header_size=0x28 //size of header block
		END
		ELSE BEGIN
			SET header_size=0x38 //size of header block for items
		END
		
		
		SET relative_effects_offset=0x0020
		SET relative_n_effects_offset=0x001e
		SET relative_saves_offset=0x0024
        SET relative_saves_bonus_offset=0x0028
        SET relative_power_offset = 0x0003
		
		FOR (i=0;i<n_headers;i=i+1) BEGIN
			SET current_header_offset = header_block_offset+i*header_size
			
			READ_SHORT current_header_offset+relative_n_effects_offset   n_effects //number of effects in the header
			READ_SHORT current_header_offset+relative_effects_offset     current_effects_offset //offset to effects of the header
			
			SET current_effects_offset=effects_block_offset + current_effects_offset*effect_size

			FOR (j=0;j<n_effects;j=j+1) BEGIN
				READ_SHORT current_effects_offset + j*effect_size  opcode
				
				SET current_effect_offset=current_effects_offset + j*effect_size
				SET saves_offset = current_effect_offset + relative_saves_offset //offset to saves of the current effect
                SET saves_bonus_offset = current_effect_offset + relative_saves_bonus_offset //offset to saves bonus of the current effect
                SET power_offset = current_effect_offset + relative_power_offset //offset to power of current effect
                    
				READ_BYTE saves_offset saves		//first byte of saves (actually only first 5 bits containing saves data)
				
				PATCH_IF (saves) BEGIN		
                    SET updated = 1                            
                    READ_BYTE power_offset pwr
                        
                    PATCH_IF (ignore_pwr OR (pwr>0 AND pwr<=10)) BEGIN
                        SET base_save = 0 
                        
                        PATCH_IF (increment_save) BEGIN
                            READ_LONG saves_bonus_offset base_save
                        END
                        
                        SET new_save_bonus = base_save - ((pwr+1)/2)
                        WRITE_LONG saves_bonus_offset new_save_bonus
                    END
				END									
			END		
			
		END
		
    END		
	

