DEFINE_PATCH_FUNCTION ~INCREMENT_SPELL_DC~
	INT_VAR
		saves_mod=1
	BEGIN
	
		
		READ_LONG 0x64 header_block_offset //beginning of extended_headers table
		READ_LONG 0x6a effects_block_offset //beginning of effects table
		READ_SHORT 0x68 n_headers //number of extended_headers

		
		SET effect_size=0x30 //size of effect block
		SET header_size=0x28 //size of header block
		
		SET relative_effects_offset=0x0020
		SET relative_n_effects_offset=0x001e
		SET relative_caster_level_offset=0x0010
		SET relative_saves_offset=0x0024
		SET relative_saves_bonus_offset=0x0028
			
		//updating saves		
		READ_SHORT 0x68 n_headers_new //new number of extended_headers	
		READ_LONG 0x64 header_block_offset //beginning of extended_headers table
		READ_LONG 0x6a effects_block_offset //beginning of effects table
		
		FOR (i=0;i<n_headers;i=i+1) BEGIN
			SET current_header_offset = header_block_offset+i*header_size
			READ_SHORT current_header_offset+relative_n_effects_offset   n_effects //number of effects in the header
			READ_SHORT current_header_offset+relative_effects_offset     current_effects_offset //offset to effects of the header
			
			SET current_effects_offset=effects_block_offset + current_effects_offset*effect_size
						
			FOR (j=0;j<n_effects;j=j+1) BEGIN
				SET current_effect_offset=current_effects_offset + j*effect_size
				SET saves_offset = current_effect_offset + relative_saves_offset //offset to saves of the current effect
				SET saves_bonus_offset = current_effect_offset + relative_saves_bonus_offset //offset to saves of the current effect
				
				READ_BYTE saves_offset saves		//first byte of saves (actually only first 5 bits containing saves data)								
				PATCH_IF (saves) BEGIN		
					READ_LONG saves_bonus_offset saves_bonus		//saves bonus					
					SET saves_bonus=saves_bonus - saves_mod
					WRITE_LONG saves_bonus_offset saves_bonus												
				END
									
			END		
		END
		

		
		
    END		
	

